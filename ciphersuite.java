/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lsb_steganography;

import java.awt.Color;
import java.awt.image.*;
import java.io.*;
import java.net.URL;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author andys
 */
public class ciphersuite extends javax.swing.JFrame {

    private int bitsAvail;
    private int bitsInput;
    private BufferedImage currImg;
    private byte[] currCipher;
    /**
     * Creates new form ciphersuite
     */
    public ciphersuite() {
        bitsAvail = -1;
        bitsInput = -1;
        currImg = null;
        currCipher = null;
        initComponents();
    }
    
    public static int log2nlz(int bits) {
        //System.out.println(Math.log(bits));
        //System.out.println(Math.log(2));
        return (int) Math.ceil(Math.log(bits)/Math.log(2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        jLabel1.setText("Image Steganographer 1.0");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Least-significant bit encryption and decryption");

        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel3.setText("URL or file path (output)");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel4.setText("URL or file path (input)");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel5.setText("Message to encrypt (ASCII)");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel6.setText("Chars in text-area message");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel7.setText("Chars available in image");

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jButton1.setText("Decrypt");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel8.setText("STATUS: OK");

        jButton2.setText("Encrypt");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                            .addComponent(jTextField3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel6))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        File f = new File(jTextField1.getText());
        if(f.exists()) {
            try {
                FileInputStream in = new FileInputStream(f);
                currImg = ImageIO.read(in);
                
                in.close();
                
                int stega = currImg.getWidth()*currImg.getHeight();
                bitsAvail = Math.floorDiv(stega, 8) - log2nlz(Math.floorDiv(stega, 8));
                jTextField3.setText(bitsAvail + " characters");
                
                if(bitsInput > bitsAvail) {
                    jLabel8.setText("STATUS: ERROR (INPUT TEXT SIZE CANNOT EXCEED IMAGE CAPACITY)");
                    jLabel8.setForeground(Color.red);
                }   
                else {
                    jLabel8.setText("STATUS: OK");
                    jLabel8.setForeground(Color.green);
                }

            } catch (FileNotFoundException ex) {
                //Shouldn't be needed
                Logger.getLogger(ciphersuite.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ciphersuite.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            try {
                //Look at URL
                URL url = new URL(jTextField1.getText());
                InputStream in = url.openStream();
                currImg = ImageIO.read(in);
                
                //System.out.println(currImg.getWidth() + " " + currImg.getHeight());
                int stega = currImg.getWidth()*currImg.getHeight();
                bitsAvail = Math.floorDiv(stega, 8) - log2nlz(Math.floorDiv(stega, 8));
                jTextField3.setText(bitsAvail + " characters");
                
                if(bitsInput > bitsAvail) {
                    jLabel8.setText("STATUS: ERROR (INPUT TEXT SIZE CANNOT EXCEED IMAGE CAPACITY)");
                    jLabel8.setForeground(Color.red);
                }   
                else if (jLabel8.getText().equals("STATUS: ERROR (INPUT TEXT SIZE CANNOT EXCEED IMAGE CAPACITY)")){
                    jLabel8.setText("STATUS: OK");
                    jLabel8.setForeground(Color.green);
                }
                
            } catch (IOException io) {
                jLabel8.setText("STATUS: ERROR (INVALID URI IN INPUT FIELD)");
                jLabel8.setForeground(Color.red);
                jTextField3.setText("Invalid URI");
                Logger.getLogger(ciphersuite.class.getName()).log(Level.SEVERE, null, io);
            }            
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        // TODO add your handling code here 
        currCipher = jTextArea1.getText().getBytes();
        int temp_estimate = currCipher.length;
        bitsInput = temp_estimate;
        jTextField4.setText(bitsInput + " characters");
        if(bitsInput > bitsAvail) {
            jLabel8.setText("STATUS: ERROR (INPUT TEXT SIZE CANNOT EXCEED IMAGE CAPACITY)");
            jLabel8.setForeground(Color.red);
        }
        else {
            jLabel8.setText("STATUS: OK");
            jLabel8.setForeground(Color.green);
        }
    }//GEN-LAST:event_jTextArea1FocusLost

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        boolean isFile = false;
        boolean isOutput = false;
        boolean isText = false;
        boolean validSize = false;
        boolean validOutput = true;
        if(!"".equals(jTextField1.getText())) {
            isFile = true;
        }
        if(!"".equals(jTextField2.getText())) {
            isOutput = true;
        }
        if(!"".equals(jTextArea1.getText())) {
            isText = true;
        }
        if(bitsInput < bitsAvail) {
            validSize = true;
        }
        File f = new File(jTextField2.getText());
        if(f.canWrite()) {
            validOutput = true;
        }
        
        //System.out.println(isOutput + " " + isFile + " " + isText + " " + validSize + " " + validOutput);
        if(isOutput && isFile && isText && validSize && validOutput) {
            //YAY!
            //System.out.println(currImg.getWidth() + ", " + currImg.getHeight());
            int stega = currImg.getWidth()*currImg.getHeight();
            int size = log2nlz(Math.floorDiv(stega, 8));
            //System.out.println(stega + ", " + size);
            StringBuilder msgsize = new StringBuilder(Integer.toBinaryString(currCipher.length));
            while(msgsize.length() < size) {
                msgsize.insert(0, "0").toString();
            }
            
            //System.out.println(msgsize.toString());
            
            for(byte b : currCipher) {
                //System.out.println(b);
                //System.out.println(String.format("%8s", Integer.toBinaryString(b & 0xFF)).replace(' ', '0'));
                msgsize.append(String.format("%8s", Integer.toBinaryString(b & 0xFF)).replace(' ', '0'));
            }
            
            String msg = msgsize.toString();
            
            //System.out.println(msg);
            
            //'Cause I'm lazy
            int counter = 0;
            for(int i = 0; i < currImg.getWidth(); i++) {
                for(int j = 0; j < currImg.getHeight(); j++) {
                    if(counter == msg.length()) {
                        try {
                            ImageIO.write(currImg, "png", f);
                            bitsAvail = -1;
                            bitsInput = -1;
                            currImg = null;
                            currCipher = null;
                            JOptionPane.showMessageDialog(this, "Your encryption has succeeded!");
                            
                        } catch (IOException ex) {
                            Logger.getLogger(ciphersuite.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        return;
                    }
                    if(msg.charAt(counter) == '0') {
                        if((currImg.getRGB(i, j)%2 + 2)%2 == 1) {
                            currImg.setRGB(i, j, currImg.getRGB(i, j) - 1);
                        }
                        //System.out.println(currImg.getRGB(i, j) + " 0");
                    }
                    else {
                        if((currImg.getRGB(i, j)%2 + 2)%2 == 0) {
                            currImg.setRGB(i, j, currImg.getRGB(i, j) + 1);
                        }
                        //System.out.println(currImg.getRGB(i, j) + " 1");
                    }
                    counter++;
                }
            }
        }
        
        String errors = "";        
        if(!isFile) {
            //STOP RIGHT THERE
            errors += "ERROR: No input file found, please input file.";
            JOptionPane.showMessageDialog(this, errors);
            return;
        }
        if(isOutput) {
            if(!validOutput) {
                errors += "ERROR: Invalid output file, please edit output.\n";
            }
            if(!isText) {
                errors += "ERROR: No ciphertext found, please edit ciphertext.\n";
            }
            if(!validSize) {
                errors += "ERROR: Ciphertext is too large, please shorten ciphertext.\n";
            }
            errors += "Please fix the above errors.";
            JOptionPane.showMessageDialog(this, errors);
        }
        else {
            errors += "ERROR: No output file found, please input.\n";
            if(!isText) {
                errors += "ERROR: No ciphertext found, please edit ciphertext.\n";
            }
            if(!validSize) {
                errors += "ERROR: Ciphertext is too large, please shorten ciphertext.\n";
            }
            errors += "Please fix the above errors.";
            JOptionPane.showMessageDialog(this, errors);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        // OOOOF DECRYPTION
        boolean isFile = false;
        if(!"".equals(jTextField1.getText())) {
            isFile = true;
        }
        if(isFile) {
            int stega = currImg.getWidth()*currImg.getHeight();
            int size = log2nlz(Math.floorDiv(stega, 8));
            jTextArea1.setText("");
            
            int counter = 0;
            int totallength = 0;
            byte[] endstring = {};
            //System.out.println(stega);
            //System.out.println(size);
            for(int i = 0; i < currImg.getWidth(); i++) {
                for(int j = 0; j < currImg.getHeight(); j++) {
                    //System.out.println(((currImg.getRGB(i, j)%2 + 2)%2));
                    if(counter == size) {
                        endstring = new byte[totallength];
                    }
                    if(counter < size) {
                        totallength *= 2;
                        totallength += (currImg.getRGB(i, j)%2 + 2)%2;
                        ////System.out.println((currImg.getRGB(i, j)%2 + 2)%2);
                    }
                    else if(counter < totallength*8 + size) {
                        //Well apparently time to do fancy stuff
                        if((counter - size) % 8 == 0) {
                            System.out.println();
                            System.out.println(i + " " + j);
                        }
                        System.out.print((currImg.getRGB(i, j)%2 + 2)%2);
                        //System.out.println(endstring[0]);
                        endstring[Math.floorDiv(counter - size, 8)] *= 2;
                        endstring[Math.floorDiv(counter - size, 8)] += (currImg.getRGB(i, j)%2 + 2)%2;
                        
                    }
                    counter++;
                }
            }
            jTextArea1.setText(new String(endstring));
            
            String s = "";
            try {
                PrintWriter bw = new PrintWriter(new BufferedWriter(new FileWriter(jTextField2.getText())));
                bw.write(new String(endstring));
                bw.close();
                s = "\nOutput has been written to: " + jTextField2.getText();
            } catch (IOException ex) {
                Logger.getLogger(ciphersuite.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            bitsAvail = -1;
            bitsInput = -1;
            currImg = null;
            currCipher = null;
            JOptionPane.showMessageDialog(this, "Your decryption has succeeded!" + s);
                            
            
            //System.out.println(Arrays.toString(endstring));
        }
        else {
            JOptionPane.showMessageDialog(this, "ERROR: No input file found, please input file.");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ciphersuite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ciphersuite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ciphersuite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ciphersuite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ciphersuite().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
